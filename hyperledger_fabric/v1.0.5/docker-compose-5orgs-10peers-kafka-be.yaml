# https://github.com/yeasy/docker-compose-files/tree/master/hyperledger
# This compose file will start a Hyperledger Fabric 1.0 MVE, including
# * 2 ca (not in use now)
# * 1 orderer
# * 4 peers in 2 orgs
# * cli for testing

version: '2.0'

services:
  ca.org1.example.com:
    extends:
      file: base-kafka.yaml
      service: ca.org1.example.com

  ca.org2.example.com:
    extends:
      file: base-kafka.yaml
      service: ca.org2.example.com

  cli:
    extends:
      file: base-kafka.yaml
      service: cli

  orderer.example.com:  # There can be multiple orderers
    extends:
      file: base-kafka.yaml
      service: orderer.example.com
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - kafka5

  # orderer1.example.com:  # There can be multiple orderers
  #   extends:
  #     file: base-kafka.yaml
  #     service: orderer1.example.com
  #   depends_on:
  #     - kafka0
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #     - kafka4      
  #     - kafka5
      
  # ORG 1
  peer0.org1.example.com:
    extends:
      file: base-kafka.yaml
      service: peer0.org1.example.com
    depends_on:
      - orderer.example.com
      #- orderer1.example.com

  peer1.org1.example.com:
    extends:
      file: base-kafka.yaml
      service: peer1.org1.example.com

  # ORG 2
  peer0.org2.example.com:
    extends:
      file: base-kafka.yaml
      service: peer0.org2.example.com

  peer1.org2.example.com:
    extends:
      file: base-kafka.yaml
      service: peer1.org2.example.com

  # ORG 3
  peer0.org3.example.com:
    extends:
      file: base-kafka.yaml
      service: peer0.org3.example.com

  peer1.org3.example.com:
    extends:
      file: base-kafka.yaml
      service: peer1.org3.example.com

  # ORG 4
  peer0.org4.example.com:
    extends:
      file: base-kafka.yaml
      service: peer0.org4.example.com

  peer1.org4.example.com:
    extends:
      file: base-kafka.yaml
      service: peer1.org4.example.com

  # ORG 5
  peer0.org5.example.com:
    extends:
      file: base-kafka.yaml
      service: peer0.org5.example.com

  peer1.org5.example.com:
    extends:
      file: base-kafka.yaml
      service: peer1.org5.example.com

# ZooKeeper services, 7 nodes for 10 peers 
  zookeeper0:
    extends:
      file: base-kafka.yaml
      service: zookeeper0

  zookeeper1:
    extends:
      file: base-kafka.yaml
      service: zookeeper1

  zookeeper2:
    extends:
      file: base-kafka.yaml
      service: zookeeper2

  zookeeper3:
    extends:
      file: base-kafka.yaml
      service: zookeeper3

  zookeeper4:
    extends:
      file: base-kafka.yaml
      service: zookeeper4

  zookeeper5:
    extends:
      file: base-kafka.yaml
      service: zookeeper5

  zookeeper6:
    extends:
      file: base-kafka.yaml
      service: zookeeper6

# Kafka services, at least 4 node to tolerant work with 1 node failure (1/3rd rule) 
  kafka0:
    extends:
      file: base-kafka.yaml
      service: kafka0
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  kafka1:
    extends:
      file: base-kafka.yaml
      service: kafka1
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  kafka2:
    extends:
      file: base-kafka.yaml
      service: kafka2
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  kafka3:
    extends:
      file: base-kafka.yaml
      service: kafka3
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  kafka4:
    extends:
      file: base-kafka.yaml
      service: kafka4
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  kafka5:
    extends:
      file: base-kafka.yaml
      service: kafka5
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
      - zookeeper5
      - zookeeper6

  explorer:
    extends:
      file: base.yaml
      service: explorer-base
    container_name: explorer
    hostname: explorer
    depends_on:
      - mysql
    volumes:
      - ./explorer-artifacts/config.json:/blockchain-explorer/config.json
      - ./crypto-config:/blockchain-explorer/first-network/crypto-config
    ports:
      - "8080:8080"  # HTTP port

  mysql: # mysql service
    extends:
      file: base.yaml
      service: mysql-base
    container_name: mysql
    hostname: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=fabricexplorer
    volumes:
      - ./explorer-artifacts/fabricexplorer.sql:/docker-entrypoint-initdb.d/fabricexplorer.sql
    #command: bash -c 'mysqld; sleep 1; mysql -uroot -proot < /tmp/fabricexplorer.sql; while true; do sleep 20171117; done'


#networks:
#  default:
#    external:
#      name: hyperledger_fabric
