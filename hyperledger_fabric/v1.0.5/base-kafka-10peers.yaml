# All elements in this file should depend on the base.yaml
# Provided a Kafka enabled fabric network with:

# ca.org1.example.com
# ca.org2.example.com
# orderer.example.com
# peer0.org1.example.com
# peer1.org1.example.com
# peer0.org2.example.com
# peer1.org2.example.com
# 7 zookeeper nodes
# 6 kafka nodes
# cli

version: '2'  # v3 does not support 'extends' yet

services:
  ca.org1.example.com:
    extends:
      file: base.yaml
      service: ca-base
    container_name: ca.org1.example.com
    hostname: ca.org1.example.com
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/c843d3f021118963ce5d340e95286e8869bb7bd051454cd4166aa2887a2ad451_sk
    ports:
      - "7054:7054"
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/c843d3f021118963ce5d340e95286e8869bb7bd051454cd4166aa2887a2ad451_sk -b admin:adminpw -d'

  ca.org2.example.com:
    extends:
      file: base.yaml
      service: ca-base
    container_name: ca.org2.example.com
    hostname: ca.org2.example.com
    environment:
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/1ee551a8753171c0377366e96a1d7ec01afddb868c9483cc501b6f8ac7ae752f_sk
    ports:
      - "8054:7054"
    volumes:
      - ./crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/1ee551a8753171c0377366e96a1d7ec01afddb868c9483cc501b6f8ac7ae752f_sk -b admin:adminpw -d'

########################################################################
  orderer.example.com:  # There can be multiple orderers
    extends:
      file: base.yaml
      service: orderer-base
    container_name: orderer.example.com
    hostname: orderer.example.com
    ports:
      - "7050:7050"
    environment:
      # Kafka related configurations
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
    volumes:
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
    - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
    - ./kafka/channel-artifacts/orderer.genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    command: orderer start

  # orderer1.example.com:  # There can be multiple orderers
  #   extends:
  #     file: base.yaml
  #     service: orderer-base
  #   container_name: orderer1.example.com
  #   hostname: orderer1.example.com
  #   ports:
  #     - "8050:8050"
  #   environment:
  #     # Kafka related configurations
  #     - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
  #     - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
  #     - ORDERER_KAFKA_VERBOSE=true
  #   volumes:
  #   - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/orderer/msp
  #   - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/:/var/hyperledger/orderer/tls
  #   - ./kafka/channel-artifacts/orderer1.genesis.block:/var/hyperledger/orderer/orderer1.genesis.block
  #   command: orderer start

  cli:
    extends:
      file: base.yaml
      service: cli-base
    container_name: fabric-cli
    hostname: fabric-cli
    tty: true
    environment:
      - CORE_PEER_ID=fabric-cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051 # default to operate on peer0.org1
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    volumes:
        - ./scripts:/tmp/scripts
        - ./crypto-config.yaml:/etc/hyperledger/fabric/crypto-config.yaml
        - ./crypto-config:/etc/hyperledger/fabric/crypto-config
        - ./kafka/channel-artifacts:/tmp/channel-artifacts
        - ./kafka/configtx.yaml:/etc/hyperledger/fabric/configtx.yaml
        - ./examples:/opt/gopath/src/examples

########################################################################
## following are peer nodes ##

  peer0.org1.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer0.org1.example.com
    hostname: peer0.org1.example.com
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
    volumes:
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 7051:7051
      - 7052:7052
      - 7053:7053

  peer1.org1.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer1.org1.example.com
    hostname: peer1.org1.example.com
    environment:
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org1.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
    volumes:
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 8051:7051
      - 8052:7052
      - 8053:7053

  peer0.org2.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer0.org2.example.com
    hostname: peer0.org2.example.com
    environment:
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org2.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 9051:7051
      - 9052:7052
      - 9053:7053

  peer1.org2.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer1.org2.example.com
    hostname: peer1.org2.example.com
    environment:
      - CORE_PEER_ID=peer1.org2.example.com
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org2.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 10051:7051
      - 10052:7052
      - 10053:7053

  peer0.org3.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer0.org3.example.com
    hostname: peer0.org3.example.com
    environment:
      - CORE_PEER_ID=peer0.org3.example.com
      - CORE_PEER_ADDRESS=peer0.org3.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org3.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 11051:7051
      - 11052:7052
      - 11053:7053  

  peer1.org3.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer1.org3.example.com
    hostname: peer1.org3.example.com
    environment:
      - CORE_PEER_ID=peer1.org3.example.com
      - CORE_PEER_ADDRESS=peer1.org3.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org3.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org3.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org3.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 14051:7051
      - 14052:7052
      - 14053:7053

  peer0.org4.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer0.org4.example.com
    hostname: peer0.org4.example.com
    environment:
      - CORE_PEER_ID=peer0.org4.example.com
      - CORE_PEER_ADDRESS=peer0.org4.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org4.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org4.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org4.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org4.example.com/peers/peer0.org4.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 12051:7051
      - 12052:7052
      - 12053:7053  

  peer1.org4.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer1.org4.example.com
    hostname: peer1.org4.example.com
    environment:
      - CORE_PEER_ID=peer1.org4.example.com
      - CORE_PEER_ADDRESS=peer1.org4.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org4.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org4.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org4.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org4.example.com/peers/peer1.org4.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org4.example.com/peers/peer1.org4.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 15051:7051
      - 15052:7052
      - 15053:7053

  peer0.org5.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer0.org5.example.com
    hostname: peer0.org5.example.com
    environment:
      - CORE_PEER_ID=peer0.org5.example.com
      - CORE_PEER_ADDRESS=peer0.org5.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org5.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org5.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org5.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org5.example.com/peers/peer0.org5.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 13051:7051
      - 13052:7052
      - 13053:7053

  peer1.org5.example.com:
    extends:
      file: base.yaml
      service: peer-base
    container_name: peer1.org5.example.com
    hostname: peer1.org5.example.com
    environment:
      - CORE_PEER_ID=peer1.org5.example.com
      - CORE_PEER_ADDRESS=peer1.org5.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org5.example.com:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org5.example.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org5.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - ./crypto-config/peerOrganizations/org5.example.com/peers/peer1.org5.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org5.example.com/peers/peer1.org5.example.com/tls:/etc/hyperledger/fabric/tls
    ports:
      - 16051:7051
      - 16052:7052
      - 16053:7053
      
########################################################################
# ZooKeeper services, at least 3 nodes
  zookeeper0:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper0
    hostname: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper1:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper1
    hostname: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper2:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper2
    hostname: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper3:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper3
    hostname: zookeeper3
    environment:
      - ZOO_MY_ID=4
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper4:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper4
    hostname: zookeeper4
    environment:
      - ZOO_MY_ID=5
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper5:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper5
    hostname: zookeeper5
    environment:
      - ZOO_MY_ID=6
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

  zookeeper6:
    extends:
      file: base.yaml
      service: zookeeper-base
    container_name: zookeeper6
    hostname: zookeeper6
    environment:
      - ZOO_MY_ID=7
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 server.4=zookeeper3:2888:3888 server.5=zookeeper4:2888:3888 server.6=zookeeper5:2888:3888 server.7=zookeeper6:2888:3888

########################################################################
# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka0:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka0
    hostname: kafka0
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181

# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka1:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka1
    hostname: kafka1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181

# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka2:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka2
    hostname: kafka2
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181

# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka3:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka3
    hostname: kafka3
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181

# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka4:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka4
    hostname: kafka4
    environment:
      - KAFKA_BROKER_ID=4
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181

# Kafka services, at least 4 node to tolerant work with 1 node failure
  kafka5:
    extends:
      file: base.yaml
      service: kafka-base
    container_name: kafka5
    hostname: kafka5
    environment:
      - KAFKA_BROKER_ID=5
      - KAFKA_MIN_INSYNC_REPLICAS=5
      - KAFKA_DEFAULT_REPLICATION_FACTOR=7
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181,zookeeper3:2181,zookeeper4:2181,zookeeper5:2181,zookeeper6:2181
